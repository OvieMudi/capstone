{
	"info": {
		"_postman_id": "af4e10a6-1588-4d65-93e8-fa2146007875",
		"name": "udacity-fsnd-xcapstone",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns correct results\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"SomeY ActorY\",\n\t\"age\": 37,\n\t\"gender\": \"female\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"SomeY MovieY\",\n\t\"release_date\": \"2018-12-4\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Actor011\",\n\t\"age\": 23,\n\t\"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie update\",\n\t\"release_date\": \"2019-10-11\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "user",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns correct results\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected values\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actors).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movies).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"SomeY ActorY\",\n\t\"age\": 37,\n\t\"gender\": \"female\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"SomeY MovieY\",\n\t\"release_date\": \"2018-12-4\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Actor011\",\n\t\"age\": 23,\n\t\"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie update\",\n\t\"release_date\": \"2019-10-11\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"5"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlF6RXlPVUl5TVRnd1F6QkdOVVJCTVRrMU56azNOakUwTlVKR1JEZzROMEpDTlRKQk9UYzFSQSJ9.eyJpc3MiOiJodHRwczovL2NhcHN0b25lNjYuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVlMzAyYjQ4ZjJmNTljMGU3MDE0NjQ1NyIsImF1ZCI6Ii9hZ2VuY3kiLCJpYXQiOjE1ODAyMjc5NzgsImV4cCI6MTU4MDMxNDM3OCwiYXpwIjoiSnRqSWYxbG9uMTNCNDR3V2h4aTRiZzhjQ1JBQ1d5bjgiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbInJlYWQ6YXNzZXRzIl19.kmugTo332JlOAyT-fx9U7VyHBIPI95JxylOgaL0IUMA4rNtVhqgFcqb6JpiyTpZo6sm7R5PhRIB2r4RBa5Fo3bkX6WBj7vJ5Gr1rkqV-K36bhuueAPRvxIaXO0DmGZRJlLRcyjGlFD_naco8Bh3-Xc1qRfq-8frluxWoQ8YD7yIdgg2BpRm3ozQcSIm3SEU6QxXQQIYgf62xiortEM0ye9FPHFL8tmwGwZVm34JAX-JUsEsYqem_CaPswW8bmBEbPvPysN4ZCCzTcGZQqVTvvmwB1p4JQIQALY61tP69V4j2NoPCOwLE2pW5JpEEYTGArZG_UOkkTyN8CEnIXyNrdw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "258388e9-6ae3-412b-8279-8a87a7017e96",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "045e3122-023e-478a-a4a1-2e2226163c3a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns correct results\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected values\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actors).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movies).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"SomeY ActorY\",\n\t\"age\": 37,\n\t\"gender\": \"female\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"SomeY MovieY\",\n\t\"release_date\": \"2018-12-4\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Actor011\",\n\t\"age\": 23,\n\t\"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie update\",\n\t\"release_date\": \"2019-10-11\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'error', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.message).contains('Not authorized');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlF6RXlPVUl5TVRnd1F6QkdOVVJCTVRrMU56azNOakUwTlVKR1JEZzROMEpDTlRKQk9UYzFSQSJ9.eyJpc3MiOiJodHRwczovL2NhcHN0b25lNjYuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVlMzAyOWE1NTBlMTVkMGU3MzI0Yjg1ZCIsImF1ZCI6Ii9hZ2VuY3kiLCJpYXQiOjE1ODAyMjc4MDMsImV4cCI6MTU4MDMxNDIwMywiYXpwIjoiSnRqSWYxbG9uMTNCNDR3V2h4aTRiZzhjQ1JBQ1d5bjgiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbInBhdGNoOmFzc2V0cyIsInBvc3Q6YXNzZXRzIiwicmVhZDphc3NldHMiXX0.AQYlBvhe-JJpuJS7Ywa-WBTptpbkZcxyaokMs2ZZzCBqSjUeZITLAi3WLlBd8LUYm5XQuqttH6oF1nZ-Irunvvaj-21nYKLS6Kw7djMwbTzUKaqC6eg-45l0M8EVM48YtwpvG4OxCh9b88DeZgUm-UWPAYr3lsLqixG0CWzDjIPHUhj3O68xzQVv4iUrN7_CeF_PafWAu1iouNlT5MUXjQTZHuLYrI4VLF4JKF4ULewWffOyG1gzzHGv-OpGLS_uajGnmQTuLR2PR4AvfaG91XyCkHQfeZO7cfr9vXK8CQObyycz-W1J6AA0fXgFXEd0lupW4ZsiHoyN0BT7cfx40g",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "258388e9-6ae3-412b-8279-8a87a7017e96",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "045e3122-023e-478a-a4a1-2e2226163c3a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "super admin",
			"item": [
				{
					"name": "/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns correct results\", () => {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/",
							"host": [
								"{{host}}"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected values\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actors).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05cea6f9-9af0-4e60-9aad-4c8faf37ef4c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movies).to.be.an('array');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65a195fa-a734-44b7-a7e0-c629b32d1fbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"SomeY ActorY\",\n\t\"age\": 37,\n\t\"gender\": \"female\"\n}"
						},
						"url": {
							"raw": "{{host}}/actors",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5050a5b9-2e15-474e-9981-0e61ec8d2ff1",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"SomeY MovieY\",\n\t\"release_date\": \"2018-12-4\"\n}"
						},
						"url": {
							"raw": "{{host}}/movies",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.actor).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Actor011\",\n\t\"age\": 23,\n\t\"gender\": \"female\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec1488aa-b4d7-468a-89f5-03484009e69c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"returns expected data\", () => {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    pm.expect(jsonData.movie).to.be.an('object');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Movie update\",\n\t\"release_date\": \"2019-10-11\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/actors/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 403\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'actor_id', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/actors/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"actors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/movies/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0aea66ad-0a6e-4533-b192-a8b0af746c78",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"returns correct error data\", () => {",
									"    pm.expect(jsonData).to.have.all.keys('success', 'movie_id', 'message');",
									"});",
									"",
									"",
									"pm.test(\"Return appropriate message\", () => {",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/movies/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"movies",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlF6RXlPVUl5TVRnd1F6QkdOVVJCTVRrMU56azNOakUwTlVKR1JEZzROMEpDTlRKQk9UYzFSQSJ9.eyJpc3MiOiJodHRwczovL2NhcHN0b25lNjYuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDVlMzAyOGM5M2NkYTU2MGU3NTg5M2UwZSIsImF1ZCI6Ii9hZ2VuY3kiLCJpYXQiOjE1ODAyMjc0MzgsImV4cCI6MTU4MDMxMzgzOCwiYXpwIjoiSnRqSWYxbG9uMTNCNDR3V2h4aTRiZzhjQ1JBQ1d5bjgiLCJzY29wZSI6IiIsInBlcm1pc3Npb25zIjpbImRlbGV0ZTphc3NldHMiLCJwYXRjaDphc3NldHMiLCJwb3N0OmFzc2V0cyIsInJlYWQ6YXNzZXRzIl19.LVomJFrjrruiG-d0pv7WRGmV7cjYrXXsdGLlJsB4vhxaU1jcMUZt0-mC14I_-tmfn4CvTu4_8mSABHPRZPCTuXwkFI_VGiH_C51UyjjxJi78JW_pMFNq83ts9WST16RyTk4fmvshrE15dGq1dJzQxKzyuNUDmRLjRAPDX5ZCToccohz75CD_dmH3e5XCSHXwPWJbBzj-hZHC6EwQa3Zkos57uz9iLaW7HIX4PmVtihBoy5bkRm5qUK7qlf6q6ioGOuiZprPeCn30Rxf39p860NyeTD3mNttOMwIXLEMv_qaRlUx4CO36AsiV3WAFBRD97L1p2b7LOPPoWOcqhHPVcw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "258388e9-6ae3-412b-8279-8a87a7017e96",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "045e3122-023e-478a-a4a1-2e2226163c3a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "fc871e59-eaa4-46e8-975b-87b750ad1804",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e5766f23-c7f1-472b-ae34-825a91147815",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "7da0fa13-ecd9-4d7d-8e38-fde2c81cfdaf",
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}